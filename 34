code:
class Solution {
    public int[] searchRange(int[] nums, int target) {
        int count =0; // to get first -0 and last digit -1
        int found =0;// to check weather the number exist in Array
        int [] result = new int[2]; 
        for(int i=0;i<nums.length;i++){
              if(nums[i]== target && count ==0){
                  result[0] = i;
                  count++;
                  found =1;
              }
              if(nums[i]== target && count ==1){
                  result[1] = i;
              }
        }
        if(found==0) return new int []{-1,-1};
       return result;
    }
}

Explanation:
 * looping through all values of array from 0 to N
 * checking weather the element is there or not, If match found then loading the start index value in result[0]
 * To diffrentiate the first loading and last loading of element we are using a variable count. 
 * Also to update that the element exist in array we are using found variable.

Beats 32%

Then optimzed solution should exist lets come back.....
